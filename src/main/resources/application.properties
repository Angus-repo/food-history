# 資料庫設定
spring.datasource.url=jdbc:h2:file:./data/db/fooddb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
# spring.h2.console.settings.web-allow-others=true

# JPA設定
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# 檔案上傳設定
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB

# 影像儲存路徑
app.image.storage.path=./data/images

# 錯誤頁面配置
server.error.whitelabel.enabled=false

# Enable Spring AOP
spring.aop.auto=true
spring.aop.proxy-target-class=true
spring.aop.auto=true
spring.aop.proxy-target-class=true

# OAuth2 設定（使用環境變數配置）
# 若未透過環境變數提供 client id/secret，Spring Boot 會嘗試綁定空值並觸發驗證錯誤。
# 開發時可註解下列三行，或確保在環境中設定 GOOGLE_CLIENT_ID 和 GOOGLE_CLIENT_SECRET。
# 設定在系統環境變數: GOOGLE_CLIENT_ID, GOOGLE_CLIENT_SECRET
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
# 使用環境變數配置 redirect-uri，在 GCP 部署時可設定為實際的域名
spring.security.oauth2.client.registration.google.redirect-uri=${OAUTH2_REDIRECT_URI:{baseUrl}/login/oauth2/code/{registrationId}}
# 要求 Google 提供 refresh token，需要 access_type=offline 和 prompt=consent
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth?access_type=offline&prompt=consent

# 可選：透過 env 設定管理員 email，用於把特定 email 提升為 admin
app.admin.email=${ADMIN_EMAIL:}